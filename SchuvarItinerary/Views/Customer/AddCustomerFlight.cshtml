@model SchuvarItinerary.Models.ViewModels.ViewCustomerFlightModel
@{
  ViewData["Title"] = "Customer Itinerary";
}
<h3 class="bg-success text-white text-center col-md-10 offset-md-1">Add New Customer Itinerary</h3>
<form class="row gy-2 gx-3 align-items-center" method="post">
  <div asp-validation-summary="ModelOnly" class="text-danger"></div>
  <div class="col-md-3 offset-md-1">
    <div class="form-floating input-group">
      <div class="input-group-text"><i class="fas fa-mobile-alt"></i></div>
      <input type="tel" pattern="[0-9]{4}-[0-9]{4}" oninput="phoneFormat(this.value)" class="form-control" asp-for="CustomerPhone" placeholder="phone" autofocus>
      <label class="ms-4" asp-for="CustomerPhone">Phone Number</label>
    </div>
    <span asp-validation-for="CustomerPhone" class="text-danger"></span>
  </div>
  <div class="col-md-4">
    <div class="input-group form-floating">
      <div class="input-group-text"><i class="far fa-user"></i></div>
      <input type="text" class="form-control" asp-for="CustomerFullName" placeholder="Jhon Doe">
      <label class="ms-4" asp-for="CustomerFullName">Customer Name</label>
    </div>
    <span asp-validation-for="CustomerFullName" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <div class="input-group form-floating">
      <div class="input-group-text"><i class="fas fa-map-pin"></i></div>
      <input type="text" class="form-control" asp-for="Flight!.Localizer" placeholder="XUZBR">
      <label class="ms-4">Localizador</label>
    </div>
    <span asp-validation-for="Flight!.Localizer" class="text-danger"></span>
  </div>
  <div class="col-md-10 offset-md-1">
    <div class="input-group form-floating">
      <div class="input-group-text"><i class="fas fa-bars"></i></div>
      <select class="form-select" asp-for="Flight!.IdAerolinea" aria-label="Default select example"
        asp-items="ViewBag.Aerolinea">
        <option value="0">Please Select Aeroline</option>
      </select>
      <label class="ms-4">Aeroline List</label>
    </div>
    <span asp-validation-for="Flight!.IdAerolinea" class="text-danger"></span>
  </div>
  <div class="col-md-4 offset-md-1">
    <div class="input-group form-floating">
      <div class="input-group-text"><i class="fas fa-map-marker"></i></div>
      <input type="text" class="form-control" asp-for="Flight!.Route" placeholder="MGA/MIA">
      <label class="ms-4">Route</label>
    </div>
    <span asp-validation-for="Flight!.Route" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <div class="input-group form-floating">
      <div class="input-group-text"><i class="far fa-calendar-check"></i></div>
      <input type="date" class="form-control" asp-for="Flight!.Departures" placeholder=""
        min='@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")' max='@DateTime.Now.AddYears(2).ToString("yyyy-MM-dd")'>
      <label class="ms-4">Departurs</label>
    </div>
    <span asp-validation-for="Flight!.Departures" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <div class="input-group form-floating">
      <div class="input-group-text"><i class="far fa-calendar-check"></i></div>
      <input type="date" class="form-control" asp-for="Flight!.Arrivals" placeholder=""
        min='@DateTime.Now.ToString("yyyy-MM-dd")' max='@DateTime.Now.AddYears(2).ToString("yyyy-MM-dd")'>
      <label class="ms-4">Arrivals</label>
    </div>
    <span asp-validation-for="Flight!.Arrivals" class="text-danger" data-bs-toggle="tooltip" data-bs-placement="right"
      data-bs-custom-class="custom-tooltip"></span>
  </div>
  <div class="col-10 d-flex justify-content-center offset-md-1 mt-3 gap-1">
  <div class="col-md-3  mt-1">
    <button type="submit" class="btn btn-primary btne"><i class="far fa-save" data-bs-toggle="tooltip"
        data-bs-title="Save Information" data-bs-placement="left"
        data-bs-custom-class="custom-tooltip">&nbsp;Save&nbsp;&nbsp;&nbsp;&nbsp;</i></button>
  </div>
  <div class="col-md-3  mt-1">
    <button type="reset" class="btn btn-info btne" data-bs-toggle="tooltip" data-bs-title="Clear all information on textbox"
      data-bs-custom-class="custom-tooltip" data-bs-placement="bottom"><i
        class="fas fa-broom">&nbsp;Reset&nbsp;&nbsp;</i></button>
  </div>
  <div class="col-md-3  mt-1">
    <a asp-action="Index" asp-controller="Home" class="btn btn-success btne" data-bs-toggle="tooltip"
      data-bs-title="Retur to Home Page" data-bs-custom-class="custom-tooltip" data-bs-placement="right"><i
        class="fas fa-undo">&nbsp;Back</i></a>
  </div>
  </div>
</form>

@if (Model != null)
{
  <h2 class="bg-success text-white text-center">Data save Succeed!</h2>
  <table class="table table-striped table-responsive table-hover table-bordered mt-2">
  <thead>
    <tr>
      <th>@Html.DisplayNameFor(m=> m.CustomerPhone)</th>
      <th>@Html.DisplayNameFor(m=> m.CustomerFullName)</th>
      <th>@Html.DisplayNameFor(m=> m.Flight!.IdAerolinea)</th>
      <th>@Html.DisplayNameFor(m=> m.Flight!.Localizer)</th>
      <th>@Html.DisplayNameFor(m=> m.Flight!.Route)</th>
      <th>@Html.DisplayNameFor(m=> m.Flight!.Departures)</th>
      <th>@Html.DisplayNameFor(m=> m.Flight!.Arrivals)</th>
    </tr>
  </thead>
</table>

}

@section Scripts{
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script>
      let txtCustomerPhone = document.querySelector("#CustomerPhone");
      let txtName = document.querySelector("#CustomerFullName");
      let departures = document.querySelector('#Flight_Departures').valueAsDate = new Date()
      let arrivals = document.querySelector('#Flight_Arrivals')
      arrivals.valueAsDate = new Date()
      var token = document.querySelector('input[name="__RequestVerificationToken"').value;
      document.querySelector('#Flight_Departures').addEventListener('change', (e) => {
       arrivals.value= e.target.value

      })
      txtCustomerPhone.addEventListener("blur", () => {
        if(txtCustomerPhone.value !== ''){
        url = "@Url.Content("~/Customer/FindCustomer")" + "?phone=" + txtCustomerPhone.value;
        fetch(url, {
          method: "POST", headers: {
            'RequestVerificationToken': token
          }
        })
          .then((result) => {
            if (result.ok) {
              return result.json();
            }
          })
          .then(data => {
            let customerName = JSON.parse(data);
            txtName.value = customerName.length > 0 ? customerName[0].CustomerFullname : "";
            txtName.readOnly = customerName.length > 0 ? true : false;
          })
      }
      })

  const phoneFormat =(e)=>{
    let txtCustomerPhone = document.querySelector('#CustomerPhone')
    e = e.replace(/\D/g,'');
    if(e.length > 4){
      e = e.slice(0,4) + '-' + e.slice(4,8)
    }
    txtCustomerPhone.value= e;
  };

</script>
}