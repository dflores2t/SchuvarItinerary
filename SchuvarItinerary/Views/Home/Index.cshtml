@using SchuvarItinerary.DataBase
@using SchuvarItinerary.Models.ViewModels
@using Newtonsoft.Json
@model IEnumerable<Flycustomer>

@{
  ViewData["Title"] = "Home Page";
  AerolineaFormsLink formLinks = new();
  foreach (var link in Model)
  {
    formLinks =
    JsonConvert.DeserializeObject<AerolineaFormsLink>(link.FlycustomerIdaerolineaNavigation.AerolineFormlinks!)!;
  }
}
<div class="container">
  <div class="row">
    <div class="col-12">
      <h3 class="bg-success text-white text-center">CONFIRMED FLIGHT ITINERARY FOR. <span
          class="">@DateTime.Now.ToShortDateString()</span></h3>
      <form asp-controller="Home" asp-action="Index" class="d-flex justify-content-end">
        <div class="col-sm-6 col-md-4">
          <label for="" class="form-label">Filter By Customer Name</label>
          <div class="input-group">
            <i class="input-group-text fas fa-search"></i>
            <input type="text" name="SearchString" class="form-control">
            <input type="submit" value="Filter" class="btn btn-primary" />
          </div>
        </div>
      </form>
    </div>
    <div>
      <hr class="border border-primary border-3 opacity-75">
      <p class="text-warning">Results: @Model.Count().</p>
    </div>
    <div class="col-12">
      @if (Model.Count() < 1)
      {
        <div class="alert @(Model.Count() < 1 ? "alert-info" : "") text-white text-center mt-5 col-md-5 mx-auto">
          <h4> No Data To Show </h4>
        </div>
      }
      @foreach (var data in Model)
      {
        <div class="col-md-6 mt-1">
          <div class="card bg-secondary">
            <div class="card-header d-flex justify-content-between text-white" id="@data.FlycustomerId">
              <span><i class="fas fa-map-pin"> @data.FlycustomerLocalyzer</i></span> <span class="text-end"><i
                class="fas fa-mobile-alt"> @data.FlycustomerIdcustomerNavigation.CustomerPhone</i></span>
            </div>
            <div class="card-body text-warning fw-bold">
              <p class="lead fw-bold text-center">@data.FlycustomerIdcustomerNavigation.CustomerFullname</p>
              <div class="d-flex justify-content-around">
                <p class="card-text">DEPARTURE <br><a
                  href="@formLinks.AerolineaOutgoingForm">@Convert.ToDateTime(data.FlycustomerDeparture).ToShortDateString()</a>
                </p>
                @if (data.FlycustomerArrivals != data.FlycustomerDeparture)
                {
                  <p class="card-text">ARRIVALS <br> <a@Convert.ToDateTime><a href="@formLinks.AerolineaIncomingForm">@Convert.ToDateTime(data.FlycustomerArrivals).ToShortDateString()</a></p>
                }
              </div>
              <a href="#" class="btn btn-primary">FILL FORM</a>
            </div>
            <div class="card-footer text-muted">
              <i class="fas fa-plane"></i> @data.FlycustomerIdaerolineaNavigation.AerolineaFullname ::
              <i class="fas fa-map-marker-alt"></i> @data.FlycustomerRoute
            </div>
          </div>
        </div>
      }
    </div>
  </div>
</div>

<script>
  //colors for each card render on home page bi #id
  let headerColor = ['#5BA4CF', '#298FCA', "#026AA7", '#055ABC', '#094C72', '#0C3953', '#7BC86C', '#61BD4F', '#5AAC44', '#519839', '#49852E', '#3F6F21', '#FFAB4A', '#E99E40', '#D29034', '#BB8129', '#A0711C', '#5DD3E5', '#29CCE5', '#36405F', '#00AECC', '#6E2F1A', '#0082A0', '#006988']
  let idCard = @Html.Raw(Json.Serialize(Model.Select(h=>h.FlycustomerId)))
    idCard.forEach(x => {
      let carHeader = document.getElementById(`${x}`).style.backgroundColor = headerColor[Math.floor(Math.random() * headerColor.length)];
    })
</script>
